definitions:
  github_com_imlargo_go-api-template_internal_dto.AuthTokens:
    properties:
      access_token:
        type: string
      expires_at:
        type: integer
      refresh_token:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_dto.CreatePresignedUrl:
    properties:
      expiry_minutes:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_dto.LoginUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  github_com_imlargo_go-api-template_internal_dto.NotificationSubscriptionPayload:
    properties:
      device_id:
        type: string
      user_id:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_dto.PushNotificationRequestPayload:
    properties:
      category:
        type: string
      message:
        type: string
      title:
        type: string
      userId:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_dto.RegisterUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_dto.SendNotificationRequestPayload:
    properties:
      notification:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Notification'
      user_id:
        type: integer
    required:
    - notification
    - user_id
    type: object
  github_com_imlargo_go-api-template_internal_dto.UserAuthResponse:
    properties:
      tokens:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.AuthTokens'
      user:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.User'
    type: object
  github_com_imlargo_go-api-template_internal_enums.ContentType:
    enum:
    - content
    - evaluation
    type: string
    x-enum-varnames:
    - ContentTypeContent
    - ContentTypeEvaluation
  github_com_imlargo_go-api-template_internal_enums.NotificationType:
    enum:
    - base
    type: string
    x-enum-varnames:
    - NotificationTypeBase
  github_com_imlargo_go-api-template_internal_enums.QuestionType:
    enum:
    - single_choice
    - multiple_choice
    type: string
    x-enum-varnames:
    - QuestionTypeSingle
    - QuestionTypeMultiple
  github_com_imlargo_go-api-template_internal_enums.UserRole:
    enum:
    - student
    - instructor
    - admin
    type: string
    x-enum-varnames:
    - UserRoleStudent
    - UserRoleInstructor
    - UserRoleAdmin
  github_com_imlargo_go-api-template_internal_models.Answer:
    properties:
      created_at:
        type: string
      id:
        type: integer
      isCorrect:
        type: boolean
      order:
        type: integer
      question:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Question'
        description: Relaciones
      question_id:
        type: integer
      text:
        type: string
      updated_at:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_models.AttemptAnswer:
    properties:
      is_correct:
        type: boolean
      points:
        type: integer
      question_id:
        type: integer
      selected_answer_ids:
        items:
          type: integer
        type: array
    type: object
  github_com_imlargo_go-api-template_internal_models.Content:
    properties:
      body:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      mediaUrl:
        type: string
      module:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        description: Relaciones
      module_id:
        type: integer
      order:
        type: integer
      title:
        type: string
      type:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_enums.ContentType'
      updated_at:
        type: string
      user_progress:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.UserProgress'
        type: array
    type: object
  github_com_imlargo_go-api-template_internal_models.Course:
    properties:
      created_at:
        type: string
      description:
        type: string
      enrollments:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Enrollment'
        type: array
      id:
        type: integer
      image_url:
        type: string
      module_count:
        type: integer
      modules:
        description: Relaciones
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        type: array
      short_description:
        type: string
      student_count:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_models.Enrollment:
    properties:
      completed_at:
        type: string
      course:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
      course_id:
        type: integer
      created_at:
        type: string
      enrolled_at:
        type: string
      id:
        type: integer
      progress:
        description: porcentaje 0-100
        type: number
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.User'
        description: Relaciones
      user_id:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_models.Evaluation:
    properties:
      created_at:
        type: string
      description:
        type: string
      evaluation_attempts:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.EvaluationAttempt'
        type: array
      id:
        type: integer
      max_attempts:
        type: integer
      module:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        description: Relaciones
      module_id:
        type: integer
      order:
        type: integer
      passing_score:
        type: integer
      question_count:
        type: integer
      questions:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Question'
        type: array
      time_limit:
        description: en minutos
        type: integer
      title:
        type: string
      type:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_enums.ContentType'
      updated_at:
        type: string
      user_progress:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.UserProgress'
        type: array
    type: object
  github_com_imlargo_go-api-template_internal_models.EvaluationAttempt:
    properties:
      answers:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.AttemptAnswer'
        type: array
      created_at:
        type: string
      evaluation:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
      evaluation_id:
        type: integer
      id:
        type: integer
      passed:
        type: boolean
      score:
        type: integer
      started_at:
        type: string
      submitted_at:
        type: string
      time_spent:
        description: en minutos
        type: integer
      total_points:
        type: integer
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.User'
        description: Relaciones
      user_id:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_models.File:
    properties:
      content_type:
        type: string
      created_at:
        type: string
      etag:
        type: string
      id:
        type: integer
      path:
        type: string
      size:
        type: integer
      updated_at:
        type: string
      url:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_models.Module:
    properties:
      contents:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
        type: array
      course:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
        description: Relaciones
      course_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      evaluations:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
        type: array
      id:
        type: integer
      order:
        type: integer
      title:
        type: string
      updated_at:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_models.Notification:
    properties:
      category:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_enums.NotificationType'
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      read:
        type: boolean
      title:
        type: string
      user_id:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_models.PushNotificationSubscription:
    properties:
      auth:
        type: string
      created_at:
        type: string
      endpoint:
        type: string
      id:
        type: integer
      p256dh:
        type: string
      user_id:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_models.Question:
    properties:
      answers:
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Answer'
        type: array
      created_at:
        type: string
      evaluation:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
        description: Relaciones
      evaluation_id:
        type: integer
      explanation:
        type: string
      id:
        type: integer
      points:
        type: integer
      text:
        type: string
      type:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_enums.QuestionType'
      updated_at:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_models.User:
    properties:
      avatarUrl:
        type: string
      created_at:
        type: string
      email:
        type: string
      enrollments:
        description: Relaciones
        items:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Enrollment'
        type: array
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      password:
        type: string
      role:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_enums.UserRole'
      updated_at:
        type: string
    type: object
  github_com_imlargo_go-api-template_internal_models.UserProgress:
    properties:
      attempts:
        type: integer
      completed_at:
        type: string
      content:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
      content_id:
        description: puede ser Content o Evaluation
        type: integer
      course:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
      course_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      module:
        $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
      module_id:
        type: integer
      score:
        type: integer
      updated_at:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.User'
        description: Relaciones
      user_id:
        type: integer
    type: object
  github_com_imlargo_go-api-template_internal_responses.ErrorResponse:
    properties:
      code:
        type: integer
      message:
        type: string
      status:
        type: string
    type: object
  webpush.Keys:
    properties:
      auth:
        type: string
      p256dh:
        type: string
    type: object
  webpush.Subscription:
    properties:
      endpoint:
        type: string
      keys:
        $ref: '#/definitions/webpush.Keys'
    type: object
info:
  contact:
    name: Default
    url: https://default.dev
  description: Backend service template
  license:
    name: MIT
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Go api
  version: "1.0"
paths:
  /api/v1/content:
    post:
      consumes:
      - application/json
      description: Create new content for a module
      parameters:
      - description: Content data
        in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create content
      tags:
      - content
  /api/v1/content/{id}:
    delete:
      description: Delete content by ID
      parameters:
      - description: Content ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete content
      tags:
      - content
    get:
      description: Get content by ID
      parameters:
      - description: Content ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get content
      tags:
      - content
    put:
      consumes:
      - application/json
      description: Update content by ID
      parameters:
      - description: Content ID
        in: path
        name: id
        required: true
        type: integer
      - description: Content data
        in: body
        name: content
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update content
      tags:
      - content
  /api/v1/courses:
    get:
      description: Get all courses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get all courses
      tags:
      - courses
    post:
      consumes:
      - application/json
      description: Create a new course
      parameters:
      - description: Course data
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new course
      tags:
      - courses
  /api/v1/courses/{courseId}/modules:
    get:
      description: Get all modules for a specific course
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get modules by course
      tags:
      - modules
  /api/v1/courses/{courseId}/modules/reorder:
    post:
      consumes:
      - application/json
      description: Reorder modules for a course
      parameters:
      - description: Course ID
        in: path
        name: courseId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Reorder modules
      tags:
      - modules
  /api/v1/courses/{id}:
    delete:
      description: Delete a course by its ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete course
      tags:
      - courses
    get:
      description: Get a course by its ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get course by ID
      tags:
      - courses
    put:
      consumes:
      - application/json
      description: Update a course by its ID
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      - description: Course data
        in: body
        name: course
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update course
      tags:
      - courses
  /api/v1/courses/{id}/enrollments:
    get:
      description: Get all enrollments for a specific course
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Enrollment'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get course enrollments
      tags:
      - enrollments
  /api/v1/courses/{id}/modules:
    get:
      description: Get a course by its ID with all modules
      parameters:
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Course'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get course with modules
      tags:
      - courses
  /api/v1/enrollments:
    post:
      consumes:
      - application/json
      description: Enroll a user in a specific course
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Enrollment'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Enroll user in course
      tags:
      - enrollments
  /api/v1/enrollments/{id}:
    delete:
      description: Delete an enrollment by its ID
      parameters:
      - description: Enrollment ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete enrollment
      tags:
      - enrollments
    get:
      description: Get an enrollment by its ID
      parameters:
      - description: Enrollment ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Enrollment'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get enrollment by ID
      tags:
      - enrollments
  /api/v1/evaluation-attempts/{id}:
    get:
      description: Get an evaluation attempt by its ID
      parameters:
      - description: Attempt ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.EvaluationAttempt'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get evaluation attempt
      tags:
      - evaluation-attempts
  /api/v1/evaluation-attempts/{id}/score:
    post:
      description: Score an evaluation attempt (admin only)
      parameters:
      - description: Attempt ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.EvaluationAttempt'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Score evaluation attempt
      tags:
      - evaluation-attempts
  /api/v1/evaluation-attempts/{id}/submit:
    post:
      consumes:
      - application/json
      description: Submit answers for an evaluation attempt
      parameters:
      - description: Attempt ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.EvaluationAttempt'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Submit evaluation attempt
      tags:
      - evaluation-attempts
  /api/v1/evaluation-attempts/start:
    post:
      consumes:
      - application/json
      description: Start a new evaluation attempt for a user
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.EvaluationAttempt'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Start evaluation attempt
      tags:
      - evaluation-attempts
  /api/v1/evaluations:
    post:
      consumes:
      - application/json
      description: Create new evaluation for a module
      parameters:
      - description: Evaluation data
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create evaluation
      tags:
      - evaluations
  /api/v1/evaluations/{id}:
    delete:
      description: Delete evaluation by ID
      parameters:
      - description: Evaluation ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete evaluation
      tags:
      - evaluations
    get:
      description: Get evaluation by ID
      parameters:
      - description: Evaluation ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get evaluation
      tags:
      - evaluations
    put:
      consumes:
      - application/json
      description: Update evaluation by ID
      parameters:
      - description: Evaluation ID
        in: path
        name: id
        required: true
        type: integer
      - description: Evaluation data
        in: body
        name: evaluation
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update evaluation
      tags:
      - evaluations
  /api/v1/files:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file to the storage
      parameters:
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: File uploaded successfully
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Upload file
      tags:
      - files
  /api/v1/files/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a file by its ID
      parameters:
      - description: File ID
        in: path
        name: fileID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete file
      tags:
      - files
    get:
      consumes:
      - application/json
      description: Get a file by its ID
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: File retrieved successfully
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.File'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "404":
          description: File Not Found
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get file by ID
      tags:
      - files
  /api/v1/files/{id}/download:
    get:
      consumes:
      - application/json
      description: Download a file by its ID
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: File downloaded successfully
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "404":
          description: File Not Found
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Download file
      tags:
      - files
  /api/v1/files/presigned-url:
    post:
      consumes:
      - application/json
      description: Get a presigned URL for uploading a file
      parameters:
      - description: File ID
        in: path
        name: fileID
        required: true
        type: integer
      - description: Expiry time in minutes for the presigned URL
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.CreatePresignedUrl'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get presigned URL for file upload
      tags:
      - files
  /api/v1/modules:
    post:
      consumes:
      - application/json
      description: Create a new module
      parameters:
      - description: Module data
        in: body
        name: module
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Create a new module
      tags:
      - modules
  /api/v1/modules/{id}:
    delete:
      description: Delete a module by its ID
      parameters:
      - description: Module ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Delete module
      tags:
      - modules
    get:
      description: Get a module by its ID
      parameters:
      - description: Module ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get module by ID
      tags:
      - modules
    put:
      consumes:
      - application/json
      description: Update a module by its ID
      parameters:
      - description: Module ID
        in: path
        name: id
        required: true
        type: integer
      - description: Module data
        in: body
        name: module
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update module
      tags:
      - modules
  /api/v1/modules/{id}/content:
    get:
      description: Get a module by its ID with all content
      parameters:
      - description: Module ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Module'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      summary: Get module with content
      tags:
      - modules
  /api/v1/modules/{moduleId}/content:
    get:
      description: Get all content for a specific module
      parameters:
      - description: Module ID
        in: path
        name: moduleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Content'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get module contents
      tags:
      - content
  /api/v1/modules/{moduleId}/evaluations:
    get:
      description: Get all evaluations for a specific module
      parameters:
      - description: Module ID
        in: path
        name: moduleId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Evaluation'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get module evaluations
      tags:
      - evaluations
  /api/v1/notifications:
    get:
      consumes:
      - application/json
      description: Get all notifications for a user
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get User Notifications
      tags:
      - notifications
  /api/v1/notifications/dispatch:
    post:
      consumes:
      - application/json
      description: Dispatch a notification (deprecated)
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - PushApiKey: []
      summary: Dispatch Notification
      tags:
      - notifications
  /api/v1/notifications/push/send:
    post:
      consumes:
      - application/json
      description: Send Push Notification
      parameters:
      - description: Push Notification Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.PushNotificationRequestPayload'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - PushApiKey: []
      summary: Send Push Notification
      tags:
      - notifications
  /api/v1/notifications/push/subscribe/{userID}:
    post:
      consumes:
      - application/json
      description: Subscribe to Push Notifications
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: string
      - description: Subscription Payload
        in: body
        name: sub
        required: true
        schema:
          $ref: '#/definitions/webpush.Subscription'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Subscribe to Push Notifications
      tags:
      - notifications
  /api/v1/notifications/push/subscriptions/{id}:
    get:
      consumes:
      - application/json
      description: Get a specific push notification subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Push Notification Subscription
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.PushNotificationSubscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get Push Subscription
      tags:
      - notifications
  /api/v1/notifications/read:
    post:
      consumes:
      - application/json
      description: Mark notifications as read for a user since a specific time
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Mark Notifications as Read
      tags:
      - notifications
  /api/v1/notifications/send:
    post:
      consumes:
      - application/json
      description: Send realtime notifications to a user
      parameters:
      - description: Notification Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.SendNotificationRequestPayload'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - PushApiKey: []
      summary: Send notification
      tags:
      - notifications
  /api/v1/notifications/subscribe:
    get:
      consumes:
      - application/json
      description: Subscribe to real time notifications using Server-Sent Events (SSE)
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: integer
      - description: Device ID
        in: query
        name: device_id
        required: true
        type: string
      produces:
      - text/event-stream
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Subscribe to notifications
      tags:
      - notifications
  /api/v1/notifications/subscriptions:
    get:
      consumes:
      - application/json
      description: Get all SSE subscriptions
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - PushApiKey: []
      summary: Get SSE Subscriptions
      tags:
      - notifications
  /api/v1/notifications/unsubscribe:
    post:
      consumes:
      - application/json
      description: Unsubscribe from real time notifications using SSE
      parameters:
      - description: Unsubscribe Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.NotificationSubscriptionPayload'
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Unsuscribe SSE
      tags:
      - notifications
  /api/v1/users/{userId}/courses/{id}/complete:
    post:
      description: Mark an enrollment as completed
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Complete enrollment
      tags:
      - enrollments
  /api/v1/users/{userId}/courses/{id}/progress:
    put:
      consumes:
      - application/json
      description: Update the progress of an enrollment
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Course ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Update enrollment progress
      tags:
      - enrollments
  /api/v1/users/{userId}/enrollments:
    get:
      description: Get all enrollments for a specific user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.Enrollment'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get user enrollments
      tags:
      - enrollments
  /api/v1/users/{userId}/evaluations/{evaluationId}/attempts:
    get:
      description: Get all attempts for a user and evaluation
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Evaluation ID
        in: path
        name: evaluationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.EvaluationAttempt'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Get user evaluation attempts
      tags:
      - evaluation-attempts
  /api/v1/users/{userId}/evaluations/{evaluationId}/can-attempt:
    get:
      description: Check if a user can attempt an evaluation
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: integer
      - description: Evaluation ID
        in: path
        name: evaluationId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Check if user can attempt evaluation
      tags:
      - evaluation-attempts
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login user with email and password
      parameters:
      - description: Login user request payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.LoginUser'
      produces:
      - application/json
      responses:
        "200":
          description: User logged in successfully
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.UserAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Login user
      tags:
      - auth
  /auth/me:
    get:
      description: Get the authenticated user's information
      produces:
      - application/json
      responses:
        "200":
          description: Authenticated user's
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_models.User'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user info
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email, password, and other details
      parameters:
      - description: Register user request payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.RegisterUser'
      produces:
      - application/json
      responses:
        "200":
          description: User registered successfully
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_dto.UserAuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_imlargo_go-api-template_internal_responses.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Register user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
  PushApiKey:
    in: header
    name: X-API-Key
    type: apiKey
swagger: "2.0"
